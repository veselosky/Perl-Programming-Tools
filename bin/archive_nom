#!/usr/bin/perl
use Kit::Script;
use Path::Class;
use XML::Feed;
use Net::Delicious;
use DateTime;
use DateTime::Format::HTTP;
use Data::Dumper;

my $now = DateTime->now;
my %config = auto_configure(options => [qw(start|s:s end|e:s dir|d:s user|u:s password|p:s)]);
my $directory = dir($config{dir}||'.');
my $start = eval {DateTime::Format::HTTP->parse_datetime($config{start}) } || DateTime->from_epoch(epoch=>0);
my $end = eval {DateTime::Format::HTTP->parse_datetime($config{end}) } || $now;

my $net_del_args = {user => $config{user}, pswd => $config{password}, updates => $config{dir}};
$net_del_args->{debug} = 1 if $config{verbose}>1;

my $net = Net::Delicious->new($net_del_args);

# Load list of existing archive files
my @files = $directory->children;

# TODO Check time of last update against existing archives to see if we need to continue

# Fetch list of dates with posts
my @dates = $net->posts_per_date();
DEBUG(Dumper(\@dates));

# Ignore dates not between $start and $end
my @fetchem = grep { $start->ymd lt $_ and $end->ymd ge $_ } map { $_->date } @dates;
# say "@fetchem";

# Group dates by month
my %date_by_month;
for my $date (@fetchem) {
    push @{$date_by_month{substr($date,0,7)}}, $date;
}

# for each month: for each day with posts: Fetch posts; write month archive
# Ignore months for which an archive file already exists
# Note: it's not very bloggish, but I have decided to sort these chronologically
# in the archive. I think it reads better that way. -VV
my $current = substr($now->datetime,0,7);
MONTH:
for my $month (sort keys %date_by_month) {
    my $file = $directory->file("$month.atom");
    next MONTH if -e $file and $month ne $current;
    my $outfile = $file->openw 
        or die "Error opening $file: $!";
    
    my $feed = XML::Feed->new('Atom');
    $feed->title("Link Archive for $month");
    $feed->modified(DateTime->now);
    # FIXME Make sure this link is adjusted to work on the site.
    $feed->self_link("http://webquills.net/feed/links/$month.atom");
    $feed->id($feed->self_link);
    $feed->author('Vince Veselosky');

    for my $date (sort @{$date_by_month{$month}}) {
        for my $post ($net->posts({dt => $date})) {
            my $entry = XML::Feed::Entry->new('Atom');
            $entry->title($post->description);
            $entry->summary($post->extended);
            $entry->link($post->href);
            $entry->category(split /\s+/, $post->tags);
            $entry->issued( DateTime::Format::HTTP->parse_datetime($post->time) );
            $entry->modified( DateTime::Format::HTTP->parse_datetime($post->time) );
            $entry->id("tag:webquills.net,$date:".$post->href);
            $feed->add_entry($entry)
        }
    }
    $outfile->print( $feed->as_xml );
    $outfile->close;
}


